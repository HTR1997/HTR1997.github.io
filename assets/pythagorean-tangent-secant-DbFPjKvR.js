import{S as I,C as R,M as n,a as s,b as v,T as U,c as o,V as f,d as M}from"./main-DRfMd9NS.js";import{f as i}from"./text-utils-BE-Y_TFR.js";import{L as a,a as r,b as c,R as D,C as P,S as G,T as X,f as Y}from"./constants-Dd-75GeY.js";import"./preload-helper-CS1eXPs2.js";const t=new I;t.background=new R(2368548);t.userData.title="1<sup>2</sup> + tan<sup>2</sup>θ = sec<sup>2</sup>θ";new f;new f;new M;new M;const e=100,C=new n(new s(2),new v);t.add(C);const j=new n(new U(e,2),new o({color:10066329})),N=new n(new s(3),new o({color:1118481,depthTest:!1}));N.renderOrder=2;const m=new n(new s(3),new o({color:1118481,depthTest:!1}));m.renderOrder=2;const h=new n(new s(3),new o({color:8947967,depthTest:!1}));h.renderOrder=2;const y=new n(new s(3),new o({color:16746632,depthTest:!1}));y.renderOrder=2;const b=new n(new s(3),new o({color:8978312,depthTest:!1}));b.renderOrder=2;const E=new n(new s(3),new o({color:16777096,depthTest:!1}));E.renderOrder=2;const S=i("1"),L=i("cosθ"),T=i("jsinθ"),x=i("tanθ"),k=i("secθ");m.add(S);b.add(x);E.add(k);t.add(j,N);t.add(m,y,h,b,E);const z=new a(new r().setPositions([0,0,0,e,0,0]),new c({color:D,linewidth:2})),A=new a(new r().setPositions([0,0,0,e,0,0]),new c({color:P,linewidth:2})),u=new a(new r().setPositions([0,0,0,0,0,0]),new c({color:G,linewidth:2})),g=new a(new r().setPositions([0,0,0,0,0,0]),new c({color:X,linewidth:2})),_=new a(new r().setPositions([0,0,0,e,0,0]),new c({color:Y,linewidth:2}));t.add(z,A,u,g,_);const B=()=>{S.visible=!1,L.visible=!L.visible,T.visible=!T.visible,x.visible=!x.visible};t.userData.toggleText=B;const q=d=>{let l=Math.atan2(d.y,d.x),w=1,O=0,p=0;C.position.set(d.x,d.y,0),w=Math.cos(l),O=Math.sin(l),p=Math.tan(l),m.position.set(e,0,0),y.position.set(0,e*O,0),h.position.set(e*w,0,0),b.position.set(e,e*p/2,0),E.position.set(e/2,e*p/2,0),u.position.x=h.position.x,u.geometry.getAttribute("instanceEnd").setY(0,O*e),u.geometry.getAttribute("instanceEnd").needsUpdate=!0,A.geometry.getAttribute("instanceEnd").setX(0,w*e),A.geometry.getAttribute("instanceEnd").needsUpdate=!0,g.position.x=e,g.geometry.getAttribute("instanceEnd").setY(0,p*e),g.geometry.getAttribute("instanceEnd").needsUpdate=!0,_.rotation.z=l,_.geometry.getAttribute("instanceEnd").setX(0,e/w),_.geometry.getAttribute("instanceEnd").needsUpdate=!0};t.userData.update=q;const Q=t;export{Q as pyt_tan_sec_scene};
