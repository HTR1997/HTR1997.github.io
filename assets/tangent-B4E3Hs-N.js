import{S as R,C as U,M as n,a as o,b as M,B as D,T as j,c as a,V as b,d as f}from"./main-DRfMd9NS.js";import{f as x}from"./text-utils-BE-Y_TFR.js";import{L as w,a as l,b as p,R as P,C as G,S as B,T as k,f as z}from"./constants-Dd-75GeY.js";import"./preload-helper-CS1eXPs2.js";const s=new R;s.background=new U(2368548);s.userData.title="jtanθ = jsinθ / cosθ";new b;const t=new b;new f;new f;const e=100,S=e*e,C=new n(new o(2),new M),N=new n(new o(2),new M({side:D}));s.add(C,N);const X=new n(new j(e,2),new a({color:10066329})),T=new n(new o(3),new a({color:1118481,depthTest:!1}));T.renderOrder=2;const y=new n(new o(3),new a({color:1118481,depthTest:!1}));y.renderOrder=2;const c=new n(new o(3),new a({color:8947967,depthTest:!1}));c.renderOrder=2;const _=new n(new o(3),new a({color:16746632,depthTest:!1}));_.renderOrder=2;const O=new n(new o(3),new a({color:8978312,depthTest:!1}));_.renderOrder=2;const Y=x("e","jθ"),v=x("cosθ"),Q=x("jsinθ"),q=x("jtanθ");y.add(Y);c.add(v);_.add(Q);O.add(q);s.add(X,T);s.add(y,c,_,O);const I=new w(new l().setPositions([0,0,0,e,0,0]),new p({color:P,linewidth:6})),A=new w(new l().setPositions([0,0,0,e,0,0]),new p({color:G,linewidth:2})),u=new w(new l().setPositions([0,0,0,0,0,0]),new p({color:B,linewidth:2})),m=new w(new l().setPositions([0,0,0,0,e,0]),new p({color:k,linewidth:2})),h=new w(new l().setPositions([0,0,0,e,0,0]),new p({color:z,linewidth:2}));s.add(I,A,u,m,h);const F=i=>{let r=Math.atan2(i.y,i.x),d=1,g=0,E=0;C.position.set(i.x,i.y,0),t.set(i.x,i.y,0);const L=t.x*t.x+t.y*t.y;t.set(S*t.x/L,S*t.y/L,0),N.position.set(t.x,-t.y,0),d=Math.cos(r),g=Math.sin(r),E=Math.tan(r),y.position.set(e*d,e*g,0),_.position.set(0,e*g,0),c.position.set(e*d,0,0),O.position.set(e,E*e,0),I.rotation.z=r,u.position.x=c.position.x,u.geometry.getAttribute("instanceEnd").setY(0,g*e),u.geometry.getAttribute("instanceEnd").needsUpdate=!0,A.geometry.getAttribute("instanceEnd").setX(0,d*e),A.geometry.getAttribute("instanceEnd").needsUpdate=!0,m.position.x=e,m.geometry.getAttribute("instanceEnd").setY(0,E*e),m.geometry.getAttribute("instanceEnd").needsUpdate=!0,h.rotation.z=r,h.geometry.getAttribute("instanceEnd").setX(0,e/d),h.geometry.getAttribute("instanceEnd").needsUpdate=!0};s.userData.update=F;const Z=s;export{Z as tan_scene};
